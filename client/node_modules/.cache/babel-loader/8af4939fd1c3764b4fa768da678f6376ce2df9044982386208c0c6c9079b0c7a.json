{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nconst URL = \"http://localhost:8080/chat\"; //might be wrong, test and drop \"/chat\"\n\nexport function useSocket(chatId) {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (!chatId) {\n      return;\n    }\n    const sock = io(URL, {\n      path: \"/ws\",\n      transports: [\"websocket\"],\n      withCredentials: true\n    });\n    sock.emit(\"joinRoom\", chatId);\n    sock.on(\"message\", message => {\n      setMessages(prev => [...prev, message]);\n    });\n    setSocket(sock);\n    return () => {\n      sock.disconnect();\n    };\n  }, [chatId]);\n  const sendMessage = message => {\n    if (socket) {\n      socket.emit(\"message\", {\n        chatId,\n        message\n      });\n    }\n  };\n  return {\n    messages,\n    sendMessage\n  };\n}\n_s(useSocket, \"gJXfAnJSbZ0cmlVFRlK2OM0vmjE=\");","map":{"version":3,"names":["React","useEffect","useState","io","URL","useSocket","chatId","_s","socket","setSocket","messages","setMessages","sock","path","transports","withCredentials","emit","on","message","prev","disconnect","sendMessage"],"sources":["C:/Users/benmccray/Projects/jmu-notes-exchange/client/src/hooks/useSocket.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {io} from \"socket.io-client\";\r\n\r\nconst URL = \"http://localhost:8080/chat\" //might be wrong, test and drop \"/chat\"\r\n\r\nexport function useSocket(chatId) {\r\n    const [socket, setSocket] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!chatId) {\r\n            return \r\n        }\r\n        const sock = io(URL,\r\n            {\r\n                path: \"/ws\",\r\n                transports: [\"websocket\"],\r\n                withCredentials: true\r\n            }\r\n        );\r\n    \r\n        sock.emit(\"joinRoom\", chatId);\r\n    \r\n        sock.on(\"message\", (message) => {\r\n            setMessages((prev) => [...prev, message]);\r\n        })\r\n    \r\n        setSocket(sock);\r\n    \r\n        return () => {\r\n            sock.disconnect();\r\n        }\r\n    }, [chatId]);\r\n\r\n    const sendMessage = (message) => {\r\n        if (socket) {\r\n            socket.emit(\"message\", {chatId, message});\r\n        }\r\n    };\r\n\r\n    return {messages, sendMessage};\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,EAAE,QAAO,kBAAkB;AAEnC,MAAMC,GAAG,GAAG,4BAA4B,EAAC;;AAEzC,OAAO,SAASC,SAASA,CAACC,MAAM,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACK,MAAM,EAAE;MACT;IACJ;IACA,MAAMM,IAAI,GAAGT,EAAE,CAACC,GAAG,EACf;MACIS,IAAI,EAAE,KAAK;MACXC,UAAU,EAAE,CAAC,WAAW,CAAC;MACzBC,eAAe,EAAE;IACrB,CACJ,CAAC;IAEDH,IAAI,CAACI,IAAI,CAAC,UAAU,EAAEV,MAAM,CAAC;IAE7BM,IAAI,CAACK,EAAE,CAAC,SAAS,EAAGC,OAAO,IAAK;MAC5BP,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEFT,SAAS,CAACG,IAAI,CAAC;IAEf,OAAO,MAAM;MACTA,IAAI,CAACQ,UAAU,CAAC,CAAC;IACrB,CAAC;EACL,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,MAAMe,WAAW,GAAIH,OAAO,IAAK;IAC7B,IAAIV,MAAM,EAAE;MACRA,MAAM,CAACQ,IAAI,CAAC,SAAS,EAAE;QAACV,MAAM;QAAEY;MAAO,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,OAAO;IAACR,QAAQ;IAAEW;EAAW,CAAC;AAClC;AAACd,EAAA,CApCeF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}