{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benmccray\\\\Projects\\\\jmu-notes-exchange\\\\client\\\\src\\\\layout\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem(\"jwtToken\");\n  const user = localStorage.getItem(\"user\");\n  if (!token || !user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/Login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","token","localStorage","getItem","user","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/benmccray/Projects/jmu-notes-exchange/client/src/layout/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst ProtectedRoute = ({children}) => {\r\n    const token = localStorage.getItem(\"jwtToken\");\r\n    const user = localStorage.getItem(\"user\");\r\n    if (!token || !user) {\r\n        return <Navigate to=\"/Login\" replace/>\r\n    }\r\n  return children;\r\n}\r\n\r\nexport default ProtectedRoute"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,cAAc,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,IAAI,CAACF,KAAK,IAAI,CAACG,IAAI,EAAE;IACjB,oBAAON,OAAA,CAACF,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC1C;EACF,OAAOV,QAAQ;AACjB,CAAC;AAAAW,EAAA,GAPKZ,cAAc;AASpB,eAAeA,cAAc;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}